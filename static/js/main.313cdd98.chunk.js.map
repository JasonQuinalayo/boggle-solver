{"version":3,"sources":["utils/getRandomInt.js","components/Die.js","utils/getRandom1992BoggleBoard.js","components/Edit.js","components/Board.js","utils/getWordScore.js","components/Play.js","components/Solution.js","components/Description.js","services/dictionary.js","utils/trie.js","utils/solver.js","App.js","index.js"],"names":["getRandomIntInclusive","min","max","lmin","Math","ceil","lmax","floor","random","Die","props","letter","highlight","id","editMode","localDice","dieCoordinates","setLocalDice","dimension","useState","dieLetter","setDieLetter","className","style","backgroundColor","type","value","onFocus","event","target","select","onChange","text","length","substring","ascii","charCodeAt","String","fromCharCode","newLocalDice","map","diceRow","diceRowIndex","die","dieIndex","setTimeout","document","getElementById","focus","onKeyDown","keyCode","elem","onBlur","randDieLetter","boggleBoard1992","getRandomBoard","board","facesRow","faceDistribution","randNum","i","temp","Edit","display","onClick","Board","dice","highlightedDice","highlightColor","setEditDice","toUpperCase","useEffect","localDiceRow","localDie","toLowerCase","dieColumnIndex","has","JSON","stringify","join","getScore","word","len","Play","playMode","wordsSet","maxScore","typedWord","setTypedWord","score","setScore","enteredWords","setEnteredWords","notification","setNotification","handleEnter","includes","wordScore","getWordScore","concat","key","Solution","solutionViewingMode","wordsList","handleMouseOverWord","handleMouseOut","handleVisualize","setVisualizationDelay","handleStopVisualize","valueAsNumber","onMouseOver","onMouseOut","Description","href","rel","getDictionary","a","fetch","fetchDict1","fetchDict2","dict1","dict2","dictionary","split","Trie","children","this","prototype","addWord","index","childIndex","node","print","stringArray","end","console","log","push","splice","printAll","solve","wordList","tiles","trieDictionary","foundWords","Set","results","nodesVisiting","currentPath","visualizationPath","row","j","dfs","trie","coordinates","curTrie","path","createWord","add","di","dj","Boggle","setDictionary","setWordsList","setWordsSet","setMaxScore","setHighlightedDice","setPlayMode","setSolutionViewingMode","setEditMode","highlightLock","setHighlightLock","visualPath","setVisualPath","visualizationDelay","visualizationTimeoutIds","setVisualizationTimeoutIds","diceStringFromStorage","localStorage","getItem","initialDice","parse","setDice","editDice","dict","func","setItem","solution","sort","b","localeCompare","reduce","acc","element","exitEdit","highlightedDiceSet","delay","timeoutIds","forEach","dieCoordinatesStr","delete","clearTimeout","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.313cdd98.chunk.js","sourcesContent":["const getRandomIntInclusive = (min, max) => {\n  const lmin = Math.ceil(min);\n  const lmax = Math.floor(max);\n  return Math.floor(Math.random() * (lmax - lmin + 1) + lmin);\n};\n\nexport default getRandomIntInclusive;\n","import React, { useState } from 'react';\nimport getRandomIntInclusive from '../utils/getRandomInt';\n\nconst Die = (props) => {\n  const {\n    letter, highlight, id, editMode, localDice, dieCoordinates, setLocalDice, dimension,\n  } = props;\n  const [dieLetter, setDieLetter] = useState(letter);\n  const highlightedStyle = {\n    backgroundColor: '#ff9999',\n  };\n\n  const handleChange = (event) => {\n    if (!editMode) return;\n    let text = event.target.value;\n    if (text.length > 1) {\n      text = text.substring(0, 1);\n    }\n    const ascii = text.charCodeAt(0);\n    if (ascii >= 97 && ascii <= 122) {\n      text = String.fromCharCode(ascii - 32);\n    } else if (ascii < 65 || ascii > 90) return;\n    if (text === 'Q') text = 'Qu';\n    setDieLetter(text);\n    const newLocalDice = localDice.map((diceRow, diceRowIndex) => {\n      if (diceRowIndex === dieCoordinates[0]) {\n        return diceRow.map((die, dieIndex) => (dieIndex === dieCoordinates[1] ? text : die));\n      }\n      return [...diceRow];\n    });\n    setLocalDice(newLocalDice);\n    setTimeout(() => document.getElementById(`boggle-${dieCoordinates[0]}-${dieCoordinates[1]}-input`).focus(), 0);\n  };\n\n  const handleKeyDown = (event) => {\n    const { keyCode } = event;\n    if (keyCode >= 37 && keyCode <= 40) {\n      let elem;\n      if (keyCode === 38) { // arrow up\n        if (dieCoordinates[0] === 0) return;\n        elem = document.getElementById(`boggle-${dieCoordinates[0] - 1}-${dieCoordinates[1]}-input`);\n      } else if (keyCode === 37) { // arrow left\n        if (dieCoordinates[1] === 0) return;\n        elem = document.getElementById(`boggle-${dieCoordinates[0]}-${dieCoordinates[1] - 1}-input`);\n      } else if (keyCode === 40) { // arrow down\n        if (dieCoordinates[0] === dimension - 1) return;\n        elem = document.getElementById(`boggle-${dieCoordinates[0] + 1}-${dieCoordinates[1]}-input`);\n      } else if (keyCode === 39) { // arrow right\n        if (dieCoordinates[1] === dimension - 1) return;\n        elem = document.getElementById(`boggle-${dieCoordinates[0]}-${dieCoordinates[1] + 1}-input`);\n      }\n      elem.focus();\n      setTimeout(() => elem.select(), 0);\n      return;\n    }\n    if (!editMode) return;\n    if (keyCode === 8) setDieLetter('');\n    document.getElementById(`boggle-${dieCoordinates[0]}-${dieCoordinates[1]}-input`).select();\n  };\n\n  const handleBlur = () => {\n    if (dieLetter === '') {\n      let randDieLetter = String.fromCharCode(getRandomIntInclusive(65, 90));\n      if (randDieLetter === 'Q') randDieLetter = 'Qu';\n      setDieLetter(randDieLetter);\n    }\n  };\n\n  return (\n    <div id={id} className=\"boggle-tile\" style={highlight ? highlightedStyle : {}}>\n      <input\n        id={`boggle-${dieCoordinates[0]}-${dieCoordinates[1]}-input`}\n        type=\"text\"\n        value={dieLetter}\n        onFocus={(event) => event.target.select()}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onBlur={handleBlur}\n      />\n    </div>\n  );\n};\n\nexport default Die;\n","import getRandomIntInclusive from './getRandomInt';\n\nconst boggleBoard1992 = [\n  ['LRYTTE', 'VTHRWE', 'EGHWNE', 'SEOTIS'],\n  ['ANAEEG', 'IDSYTT', 'OATTOW', 'MTOICU'],\n  ['AFPKFS', 'XLDERI', 'HCPOAS', 'ENSIEU'],\n  ['YLDEVR', 'ZNRNHL', 'NMIQHU', 'OBBAOJ'],\n];\n\nconst getRandomBoard = () => {\n  const board = boggleBoard1992.map((facesRow) => facesRow.map(\n    (faceDistribution) => {\n      const randNum = getRandomIntInclusive(0, 5);\n      return faceDistribution[randNum] === 'Q' ? 'Qu' : faceDistribution[randNum];\n    },\n  ));\n\n  for (let i = 0; i < 15; i++) {\n    const randNum = getRandomIntInclusive(i, 15);\n    const temp = board[Math.floor(randNum / 4)][randNum % 4];\n    board[Math.floor(randNum / 4)][randNum % 4] = board[Math.floor(i / 4)][i % 4];\n    board[Math.floor(i / 4)][i % 4] = temp;\n  }\n\n  return board;\n};\n\nexport default getRandomBoard;\n","import React from 'react';\nimport getRandomBoard from '../utils/getRandom1992BoggleBoard';\n\nconst Edit = (props) => {\n  const { setLocalDice, editMode } = props;\n  const handleRandomize = () => {\n    setLocalDice(getRandomBoard());\n  };\n  return (\n    <div id=\"boggle-edit\" style={editMode ? {} : { display: 'none' }}>\n      <br />\n      <span>Leaving a tile blank will automatically randomize it.</span>\n      <button type=\"button\" onClick={handleRandomize}>Get Random 1992 Boggle Board</button>\n    </div>\n  );\n};\n\nexport default Edit;\n","/* eslint-disable react/no-array-index-key */\nimport React, { useEffect, useState } from 'react';\nimport Die from './Die';\nimport Edit from './Edit';\n\nconst Board = (props) => {\n  const {\n    dice, highlightedDice, highlightColor, editMode, setEditDice, dimension,\n  } = props;\n  const [localDice, setLocalDice] = useState(dice.map(\n    (diceRow) => diceRow.map((die) => (die === 'q' ? 'Qu' : die.toUpperCase())),\n  ));\n  useEffect(() => {\n    setEditDice(localDice.map((localDiceRow) => localDiceRow.map((localDie) => (localDie === 'Qu' ? 'q' : localDie.toLowerCase()))));\n  }, [localDice, setEditDice]);\n  return (\n    <div id=\"boggle-board\">\n      {localDice.map(\n        (diceRow, diceRowIndex) => (\n          <div key={diceRow.join('') + diceRowIndex} className=\"boggle-row\">\n            {diceRow.map(\n              (die, dieColumnIndex) => (\n                <Die\n                  dimension={dimension}\n                  localDice={localDice}\n                  setLocalDice={setLocalDice}\n                  dieCoordinates={[diceRowIndex, dieColumnIndex]}\n                  editMode={editMode}\n                  id={`boggle-${diceRowIndex}-${dieColumnIndex}`}\n                  key={die + dieColumnIndex}\n                  letter={die}\n                  highlightColor={highlightColor}\n                  highlight={highlightedDice == null\n                    ? false\n                    : highlightedDice.has(JSON.stringify([diceRowIndex, dieColumnIndex]))}\n                />\n              ),\n            )}\n          </div>\n        ),\n      )}\n      <Edit editMode={editMode} setLocalDice={setLocalDice} />\n    </div>\n  );\n};\n\nexport default Board;\n","const getScore = (word) => {\n  const len = word.length;\n  if (len < 3) return 0;\n  if (len < 5) return 1;\n  if (len === 5) return 2;\n  if (len === 6) return 3;\n  if (len === 7) return 5;\n  return 11;\n};\n\nexport default getScore;\n","import React, { useState, useEffect } from 'react';\nimport getWordScore from '../utils/getWordScore';\n\nconst Play = (props) => {\n  const {\n    playMode, wordsSet, maxScore,\n  } = props;\n  const [typedWord, setTypedWord] = useState('');\n  const [score, setScore] = useState(0);\n  const [enteredWords, setEnteredWords] = useState([]);\n  const [notification, setNotification] = useState('');\n  useEffect(() => {\n    setEnteredWords([]);\n    setScore(0);\n    setNotification('');\n  }, [wordsSet]);\n\n  const handleEnter = () => {\n    const word = typedWord;\n    if (wordsSet.has(word) && !(enteredWords.includes(word))) {\n      const wordScore = getWordScore(word);\n      setScore(score + wordScore);\n      setEnteredWords(enteredWords.concat(word));\n      setNotification(`You entered '${word}' with score of ${wordScore}`);\n      setTypedWord('');\n    } else if (enteredWords.includes(word)) {\n      setNotification(`You already entered '${word}'`);\n    } else {\n      setNotification('Invalid word');\n    }\n  };\n  const handleEnterClick = (event) => {\n    if (event.key === 'Enter' || (event.keyCode && event.keyCode === 13)) {\n      handleEnter();\n    }\n  };\n  return (\n    <div id=\"boggle-play\" style={playMode ? {} : { display: 'none' }}>\n      <div id=\"boggle-input-word\">\n        <input\n          type=\"text\"\n          value={typedWord}\n          onChange={({ target }) => setTypedWord(target.value)}\n          onKeyDown={handleEnterClick}\n        />\n        <button type=\"submit\" onClick={handleEnter}>Enter</button>\n      </div>\n      <br />\n      <div id=\"boggle-notification\">\n        {notification}\n      </div>\n      <br />\n      <div id=\"boggle-score-sheet\">\n        <div>\n          Score :\n          <span>\n            {score}\n          </span>\n        </div>\n        <div>\n          Max Score :\n          <span>\n            {maxScore}\n          </span>\n        </div>\n      </div>\n      <br />\n      Entered Words :\n      <div id=\"boggle-entered-words\">\n        {enteredWords.map((word) => (\n          <div>\n            {word}\n            <br />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Play;\n","/* eslint-disable no-restricted-globals */\nimport React from 'react';\n\nconst Solution = (props) => {\n  const {\n    solutionViewingMode, wordsList, handleMouseOverWord,\n    maxScore, handleMouseOut, handleVisualize, setVisualizationDelay,\n    handleStopVisualize,\n  } = props;\n  return (\n    <div id=\"boggle-solution\" style={solutionViewingMode ? {} : { display: 'none' }}>\n      <span>Visualization Speed</span>\n      <input type=\"range\" min=\"1\" max=\"190\" onChange={(event) => setVisualizationDelay(191 - event.target.valueAsNumber)} />\n      <div>\n        <button type=\"button\" onClick={handleVisualize}>Visualize solving</button>\n        <button type=\"button\" onClick={handleStopVisualize}>Stop visualization</button>\n      </div>\n      <div id=\"boggle-words-box\">\n        <div id=\"boggle-words-list\">\n          {wordsList.map((word) => (\n          // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n            <div onMouseOver={handleMouseOverWord(word)} onMouseOut={handleMouseOut} className=\"boggle-word\">\n              {word.word}\n              <br />\n            </div>\n          ))}\n        </div>\n      </div>\n      <div>\n        Max Score:\n        {maxScore}\n      </div>\n    </div>\n  );\n};\n\nexport default Solution;\n","import React from 'react';\n\nconst Description = () => (\n  <div id=\"boggle-description\">\n    <p>\n      Boggle Solver.\n      <br />\n      Word list used as reference is\n      {' '}\n      <a href=\"https://github.com/elasticdog/yawl\" target=\"_blank\" rel=\"noreferrer\">&apos;Yet Another Word List&apos;</a>\n      {' '}\n      by Mendel Leo Cooper.\n    </p>\n  </div>\n);\n\nexport default Description;\n","const getDictionary = async () => {\n  const fetchDict1 = await fetch('./wordlist/sigword.list.txt');\n  const fetchDict2 = await fetch('./wordlist/word.list.txt');\n  const dict1 = await fetchDict1.text();\n  const dict2 = await fetchDict2.text();\n  const dictionary = (dict1.split('\\n')).concat(dict2.split('\\n'));\n  return dictionary;\n};\n\nexport default getDictionary;\n","function Trie() {\n  const children = [];\n  for (let i = 0; i < 26; i += 1) {\n    children[i] = null;\n  }\n  this.children = children;\n  this.score = 0;\n}\n\nTrie.prototype.addWord = function add(word, index, score) {\n  if (index === word.length) {\n    this.score = score;\n    return;\n  }\n  const childIndex = word.charCodeAt(index) - 97;\n  let node = this.children[childIndex];\n  if (node == null) {\n    node = new Trie();\n    this.children[childIndex] = node;\n  }\n  node.addWord(word, index + 1, score);\n};\n\nTrie.prototype.print = function print(stringArray) {\n  // eslint-disable-next-line no-console\n  if (this.end === true) console.log(stringArray.join(''));\n  for (let i = 0; i < 26; i += 1) {\n    if (this.children[i]) {\n      stringArray.push(String.fromCharCode(97 + i));\n      this.children[i].print(stringArray);\n      stringArray.splice(stringArray.length - 1);\n    }\n  }\n};\n\nTrie.prototype.printAll = function printAll() {\n  const stringArray = [];\n  this.print(stringArray);\n};\n\nexport default Trie;\n","import Trie from './trie';\nimport getWordScore from './getWordScore';\n\nconst createWord = function createWord(word, score, path) {\n  return {\n    word,\n    score,\n    path,\n  };\n};\n\nconst solve = (wordList, tiles) => {\n  if (wordList.length === 0) return null;\n  const trieDictionary = new Trie();\n  for (let i = 0; i < wordList.length; i += 1) {\n    const len = wordList[i].length;\n    if (len > 2) {\n      const score = getWordScore(wordList[i]);\n      trieDictionary.addWord(wordList[i], 0, score);\n    }\n  }\n\n  const foundWords = new Set();\n  const results = [];\n  const stringArray = [];\n  const nodesVisiting = [];\n  const currentPath = [];\n  const visualizationPath = [];\n\n  for (let i = 0; i < tiles.length; i += 1) {\n    const row = [];\n    for (let j = 0; j < tiles[0].length; j += 1) {\n      row.push(false);\n    }\n    nodesVisiting.push(row);\n  }\n\n  const dfs = (i, j, trie) => {\n    if (i < 0 || i >= tiles.length || j < 0 || j >= tiles[0].length || nodesVisiting[i][j]) return;\n    const coordinates = [i, j];\n    visualizationPath.push(coordinates);\n    const index = (tiles[i][j]).charCodeAt(0) - 97;\n    let curTrie = trie.children[index];\n    if (curTrie === null) {\n      visualizationPath.push(coordinates);\n      return;\n    }\n    if (tiles[i][j] === 'q') {\n      curTrie = curTrie.children[20];\n      if (curTrie === null) {\n        visualizationPath.push(coordinates);\n        return;\n      }\n      stringArray.push('qu');\n    } else {\n      stringArray.push(tiles[i][j]);\n    }\n    nodesVisiting[i][j] = true;\n    currentPath.push([i, j]);\n    if (curTrie.score && !(foundWords.has(stringArray.join('')))) {\n      const word = stringArray.join('');\n      results.push(createWord(word, curTrie.score, [...currentPath]));\n      foundWords.add(word);\n      visualizationPath.push([1]);\n    }\n    for (let di = -1; di <= 1; di += 1) {\n      for (let dj = -1; dj <= 1; dj += 1) {\n        dfs(i + di, j + dj, curTrie);\n      }\n    }\n    nodesVisiting[i][j] = false;\n    currentPath.splice(currentPath.length - 1);\n    stringArray.splice(stringArray.length - 1);\n    visualizationPath.push(coordinates);\n  };\n\n  for (let i = 0; i < tiles.length; i += 1) {\n    for (let j = 0; j < tiles[0].length; j += 1) {\n      dfs(i, j, trieDictionary);\n    }\n  }\n  return { results, foundWords, visualizationPath };\n};\n\nexport default solve;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Board from './components/Board';\nimport Play from './components/Play';\nimport Solution from './components/Solution';\nimport Description from './components/Description';\nimport getDictionary from './services/dictionary';\nimport solve from './utils/solver';\nimport getRandomBoard from './utils/getRandom1992BoggleBoard';\n\nconst Boggle = () => {\n  const [dictionary, setDictionary] = useState([]);\n  const [wordsList, setWordsList] = useState([]);\n  const [wordsSet, setWordsSet] = useState(null);\n  const [maxScore, setMaxScore] = useState(0);\n  const [highlightedDice, setHighlightedDice] = useState(null);\n  const [playMode, setPlayMode] = useState(false);\n  const [solutionViewingMode, setSolutionViewingMode] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [highlightLock, setHighlightLock] = useState(false);\n  const [visualPath, setVisualPath] = useState([]);\n  const [visualizationDelay, setVisualizationDelay] = useState(100);\n  const [visualizationTimeoutIds, setVisualizationTimeoutIds] = useState([]);\n  const diceStringFromStorage = localStorage.getItem('dice');\n  const initialDice = diceStringFromStorage ? JSON.parse(diceStringFromStorage)\n    : getRandomBoard().map((diceRow) => diceRow.map((die) => (die === 'Qu' ? 'q' : die.toLowerCase())));\n  const [dice, setDice] = useState(initialDice);\n  const [editDice, setEditDice] = useState(initialDice);\n  const dimension = 4;\n\n  useEffect(() => {\n    const func = async () => {\n      const dict = await getDictionary();\n      setDictionary(dict);\n    };\n    func();\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('dice', JSON.stringify(dice));\n  }, [dice]);\n\n  useEffect(() => {\n    const solution = solve(dictionary, dice);\n    if (solution === null) return;\n    const { results, foundWords, visualizationPath } = solution;\n    results.sort((a, b) => a.word.localeCompare(b.word));\n    setVisualPath(visualizationPath);\n    setWordsSet(foundWords);\n    setWordsList(results);\n  }, [dictionary, dice]);\n\n  useEffect(() => {\n    setMaxScore(wordsList.reduce((acc, element) => acc + element.score, 0));\n  }, [wordsList]);\n\n  const visualize = () => {\n    const delay = visualizationDelay;\n    setHighlightLock(true);\n    const timeoutIds = [];\n    const path = new Set();\n    for (let i = 0; i < visualPath.length; i++) {\n      if (visualPath[i].length === 1) {\n        path.forEach((dieCoordinates) => {\n          const die = document.getElementById(`boggle-${dieCoordinates[1]}-${dieCoordinates[3]}`);\n          timeoutIds.push(setTimeout(() => {\n            die.style.backgroundColor = '#8080ff';\n          }, delay * i));\n        });\n\n        path.forEach((dieCoordinates) => {\n          const die = document.getElementById(`boggle-${dieCoordinates[1]}-${dieCoordinates[3]}`);\n          timeoutIds.push(setTimeout(() => {\n            die.style.backgroundColor = '#ff9999';\n          }, delay * (i + 2)));\n        });\n      } else {\n        const die = document.getElementById(`boggle-${visualPath[i][0]}-${visualPath[i][1]}`);\n        const dieCoordinatesStr = JSON.stringify(visualPath[i]);\n        if (path.has(dieCoordinatesStr)) {\n          path.delete(dieCoordinatesStr);\n          timeoutIds.push(setTimeout(() => {\n            die.style.backgroundColor = '#ffffff';\n          }, delay * i));\n        } else {\n          path.add(dieCoordinatesStr);\n          timeoutIds.push(setTimeout(() => {\n            die.style.backgroundColor = '#ff9999';\n          }, delay * i));\n        }\n      }\n    }\n    timeoutIds.push(setTimeout(() => {\n      setHighlightLock(false);\n    }, visualPath.length * delay));\n    setVisualizationTimeoutIds(timeoutIds);\n  };\n\n  const handleMouseOverWord = (word) => () => {\n    if (highlightLock) return;\n    const highlightedDiceSet = new Set();\n    for (let i = 0; i < word.path.length; i++) {\n      highlightedDiceSet.add(JSON.stringify(word.path[i]));\n    }\n    setHighlightedDice(highlightedDiceSet);\n  };\n\n  const handleMouseOut = () => {\n    setHighlightedDice(null);\n  };\n\n  const exitEdit = () => {\n    setDice(editDice.map((diceRow) => [...diceRow]));\n    setEditMode(false);\n  };\n\n  const handleClickPlay = () => {\n    if (editMode) {\n      exitEdit();\n    }\n    setSolutionViewingMode(false);\n    setPlayMode(true);\n  };\n\n  const handleClickSolve = () => {\n    if (editMode) {\n      exitEdit();\n    }\n    setPlayMode(false);\n    setSolutionViewingMode(true);\n  };\n\n  const handleClickEdit = () => {\n    setPlayMode(false);\n    setSolutionViewingMode(false);\n    setEditMode(true);\n  };\n\n  const handleStopVisualize = () => {\n    const timeoutIds = visualizationTimeoutIds;\n    for (let i = 0; i < timeoutIds.length; i++) {\n      clearTimeout(timeoutIds[i]);\n    }\n    setHighlightLock(false);\n    setVisualizationTimeoutIds([]);\n    for (let i = 0; i < dimension; i++) {\n      for (let j = 0; j < dimension; j++) {\n        document.getElementById(`boggle-${i}-${j}`).style.backgroundColor = '#ffffff';\n      }\n    }\n  };\n\n  return (\n    <div id=\"Boggle\">\n      <Description />\n      <div id=\"boggle-interface\">\n        <div id=\"boggle-buttons\">\n          <button type=\"button\" onClick={handleClickPlay}>Play</button>\n          <button type=\"button\" onClick={handleClickSolve}>Solution</button>\n          <button type=\"button\" onClick={handleClickEdit} style={editMode ? { backgroundColor: '#8080ff' } : {}}>Edit</button>\n        </div>\n        <Board\n          dice={dice}\n          highlightedDice={highlightedDice}\n          editMode={editMode}\n          setEditDice={setEditDice}\n          dimension={dimension}\n        />\n        <div id=\"boggle-work-area\">\n          <Solution\n            solutionViewingMode={solutionViewingMode}\n            wordsList={wordsList}\n            handleMouseOverWord={handleMouseOverWord}\n            maxScore={maxScore}\n            handleMouseOut={handleMouseOut}\n            handleVisualize={visualize}\n            handleStopVisualize={handleStopVisualize}\n            setVisualizationDelay={setVisualizationDelay}\n          />\n          <Play maxScore={maxScore} playMode={playMode} wordsSet={wordsSet} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Boggle;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}